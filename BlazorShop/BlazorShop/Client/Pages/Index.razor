@page "/"
@inject HttpClient Http
@using BlazorShop.Shared
@using BlazorShop.Client.Components
@using System.Text.Json

@inject IJSRuntime JSRuntime

<PageTitle>Home</PageTitle>
<h1>Shop</h1>
@if (prods == null)
{
    <p><em>Loading...</em></p>
}
else
{
<div class="row">
    @foreach (var product in prods)
    {
        <div class="col-lg-3 col-md-4 col-sm-6">
            <div class="card" style="margin-bottom: 20px">
                <img class="card-img-top" style="  width: 100%; height: 272px; object-fit: contain;"
                 src="@product.ImageName" alt="@product.Name" />
                <div class="card-body">
                    <h5 class="card-title">@product.Name @product.Price MDL</h5>
                    <p class="card-text">@product.Description</p>
                    <input type="number" style="width=50px" min="1"  @bind-value="@product.Quantity">
                    <button @onclick="@(() => AddToCart(product))" class="btn btn-primary">Add to Cart</button>
                </div>
            </div>
        </div>
    }
</div>
}


@code {
    private List<Product> cart = new List<Product>();

    private List<Product> prods;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        prods = await Http.GetFromJsonAsync<List<Product>>("/api/products/list");
    }
    private async Task AddToCart(Product product)
    {
        cart.Add(product);


        var json = JsonSerializer.Serialize(cart);
        await JSRuntime.InvokeAsync<object>("localStorage.setItem", "cart", json);

    }

}